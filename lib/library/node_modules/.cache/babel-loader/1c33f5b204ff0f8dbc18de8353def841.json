{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projet-Isircom-librairie-\\\\lib\\\\library\\\\src\\\\components\\\\body\\\\library\\\\uploadRap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isEmpty } from '../../utils/validation/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: '',\n  link: '',\n  err: '',\n  success: ''\n};\n\nfunction UploadRap() {\n  _s();\n\n  const [rapport, setRapport] = useState(initialState);\n  const {\n    title,\n    link,\n    err,\n    success\n  } = rapport;\n  const [data, setData] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n\n  const handleChangeInput = e => {\n    const {\n      title,\n      value\n    } = e.target;\n    setRapport({ ...rapport,\n      [title]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEmpty(title) || isEmpty(link)) return setRapport({ ...rapport,\n      err: \"Please fill in all fields.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('/rapport/uploadRap', {\n        title,\n        link\n      });\n      setRapport({ ...rapport,\n        err: '',\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setRapport({ ...rapport,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const changeRapport = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) return setData({ ...data,\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) return setData({ ...data,\n        err: \"Size too large.\",\n        success: ''\n      });\n      if (file.type !== 'application/pdf') return setData({ ...data,\n        err: \"File format is incorrect.\",\n        success: ''\n      });\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_rapport', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"link\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"link\",\n          id: \"link\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          id: \"title\",\n          name: \"title\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadRap, \"7XQl03w6NQrV9azo01SvBppiIBE=\");\n\n_c = UploadRap;\nexport default UploadRap;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadRap\");","map":{"version":3,"sources":["D:/Projet-Isircom-librairie-/lib/library/src/components/body/library/uploadRap.js"],"names":["React","useState","axios","showErrMsg","showSuccessMsg","isEmpty","initialState","title","link","err","success","UploadRap","rapport","setRapport","data","setData","loading","setLoading","handleChangeInput","e","value","target","handleSubmit","preventDefault","res","post","msg","response","changeRapport","file","files","size","type","formData","FormData","append","headers","Authorization","token"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\r\nimport {isEmpty} from '../../utils/validation/Validation'\r\n\r\n\r\nconst initialState = {\r\n    title: '',\r\n    link: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction UploadRap() {\r\n    const [rapport, setRapport] = useState(initialState)\r\n\r\n    const {title, link, err, success} = rapport\r\n    const [data, setData] = useState(initialState)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleChangeInput = e => {\r\n        const {title, value} = e.target\r\n        setRapport({...rapport, [title]:value, err: '', success: ''})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if(isEmpty(title) || isEmpty(link))\r\n                return setRapport({...rapport, err: \"Please fill in all fields.\", success: ''})\r\n\r\n        try {\r\n            const res = await axios.post('/rapport/uploadRap', {\r\n                title,link\r\n            })\r\n\r\n            setRapport({...rapport, err: '', success: res.data.msg})\r\n        } catch (err) {\r\n            err.response.data.msg && \r\n            setRapport({...rapport, err: err.response.data.msg, success: ''})\r\n        }\r\n    }\r\n\r\n\r\n    const changeRapport = async(e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if(!file) return setData({...data, err: \"No files were uploaded.\" , success: ''})\r\n\r\n            if(file.size > 1024 * 1024)\r\n                return setData({...data, err: \"Size too large.\" , success: ''})\r\n\r\n            if(file.type !== 'application/pdf')\r\n                return setData({...data, err: \"File format is incorrect.\" , success: ''})\r\n\r\n            let formData =  new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_rapport', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n\r\n            setLoading(false)\r\n            \r\n        } catch (err) {\r\n            setData({...data, err: err.response.data.msg , success: ''})\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login_page\">\r\n            <h2>upload</h2>\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                         <label htmlFor=\"link\">Title</label>\r\n                        <input type=\"file\" name=\"link\" id=\"link\" onChange={handleChangeInput} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" placeholder=\"Title\" id=\"title\"\r\n                        name=\"title\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <button type=\"submit\">Upload </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadRap"]},"metadata":{},"sourceType":"module"}